*alternate.txt* Toggle between header and source files                 *alternate*

CONTENTS                                                    *alternate-contents*

 1. Introduction                |alternate-introduction|
 2. Requirements                |alternate-requirements|
 3. Usage                       |alternate-usage|
 4. License                     |alternate-license|
 5. History                     |alternate-history|


INTRODUCTION                                            *alternate-introduction*

This plugin allows to quickly switch between alternate files. A common use
case for this plugin is to switch between C/C++ header and source files.

Vim-alternate works by specifying an alternate extension for a specific
extension, and then allows to switch to that file using a single command or
shortcut. The alternate file may be located in a different directory relative
to the current file. The directories that are considered can be configured.

This plugin is similar to the well-known a.vim, but simpler. vim-alternate
weighs in at less than sixty lines of pure Vim script, and that includes
whitespace and comments. Furthermore, it simplifies dealing with a cycle of
alternates. For example, with vim-alternate it is possible to switch from a
C++ source file (.cpp) to its corresponding header file (.h), from the header
file to the corresponding header source file (.hpp) and finally back again to
the C++ source file. Something a.vim does not handle correctly as far as I
know.

The latest version of vim-alternate can be found at:

  https://github.com/ton/vim-alternate

Bugs can be reported there as well.


REQUIREMENTS                                            *alternate-requirements*

This plug-in has no additional requirements.

Note

This plug-in so far has only been tested with Neovim 0.3.2+, under Linux. I do
not have access to a Windows machine. Please consider Windows support to be
broken until proven otherwise. Pull requests are welcome!


USAGE                                                          *alternate-usage*

Vim-alternate provides one command that opens the alternate file for the file
loaded in the current buffer:

  :Alternate

No default keymappings are provided, but can easily be defined by the user.
For example, to map F4 to :Alternate, add the following lines to your Vim
configuration:

  nmap <silent> <F4> :Alternate<CR>

Vim-alternate will then search for an alternate file based on the current
configuration.

For more details and examples, see the OPTIONS section.


OPTIONS                                                      *alternate-options*

To set an option, include a line like the following in your Vim configuration:

    let g:AlternatePaths = ['../itf', '../src', '.', '..']

The following is a list of all available options:


                                                            *g:AlternateCommand*

    |g:AlternateCommand|            command to use for opening the alternate file

        Command to use for opening the alternate file. By default, this uses
        'e' to open the alternate file in the current buffer. To open the
        alternate file in a new tab for example, use 'tabnew'.

        Default value: 'e'

                                                  *g:AlternateExtensionMappings*

    |g:AlternateExtensionMappings|       list of dictionary from string to string

        List of dictionaries mapping an extension to an alternate extension.

        Default value: [{'.cpp' : '.h', '.h' : '.hpp', '.hpp' : '.cpp'}, \
                        {'.c': '.h', '.h': '.c'}]

                                                              *g:AlternatePaths*

    |g:AlternatePaths|                    comma separated list of alternate paths

        Comma separated list of paths relative to the current file that are
        searched for the alternate file.

        Default value: ['.', '../itf', '../include', '../src']


LICENSE                                                      *alternate-license*

Copyright 2018-2020 Ton van den Heuvel. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice,
   this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.


HISTORY                                                      *alternate-history*

v0.1 (May 17th 2019)

- initial public release

------------------------------------------------------------------------------
vim:tw=78:ft=help:
